import{_ as a,a as e,o as n,aR as t}from"./chunks/framework.Dl98zJwX.js";const u=JSON.parse('{"title":"npm@1 npm@3","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/npm/index.md","filePath":"前端/面试题/npm/index.md","lastUpdated":1721110150000}'),i={name:"前端/面试题/npm/index.md"},l=t('<h1 id="npm-1-npm-3" tabindex="-1">npm@1 npm@3 <a class="header-anchor" href="#npm-1-npm-3" aria-label="Permalink to &quot;npm@1 npm@3&quot;">​</a></h1><ul><li>层级过深，导致路径过深会报错</li><li>不同的依赖项，会复制了好多次</li></ul><h1 id="npm-3" tabindex="-1">npm@3 <a class="header-anchor" href="#npm-3" aria-label="Permalink to &quot;npm@3&quot;">​</a></h1><ul><li>扁平化处理</li><li>问题： <ul><li>模块可以访问它们不依赖，A 依赖 C，B 依赖C，但A没有声明，依然可以使用，项目可以跑通，后面 B 修改了C 版本，A 刚不兼容对应C 的版本，造成报错</li><li>一些包必须复制到一个项目的 node_modules 文件夹中</li></ul></li></ul><h1 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h1><p>高效的利用磁盘空间</p><h1 id="软链接-硬链接" tabindex="-1">软链接 &amp; 硬链接 <a class="header-anchor" href="#软链接-硬链接" aria-label="Permalink to &quot;软链接 &amp; 硬链接&quot;">​</a></h1><p>软链接：window 快捷键, 原文件删除，快捷键不能访问 硬连接：mac 替身，原文件删除，依然可以通过备份访问到文件</p>',8),p=[l];function o(r,m,d,s,_,c){return n(),e("div",null,p)}const f=a(i,[["render",o]]);export{u as __pageData,f as default};
