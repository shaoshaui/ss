import{_ as i,a,aQ as e,o as t}from"./chunks/framework.CqV2UAXh.js";const p=JSON.parse('{"title":"七层和四层的区别，真正做了哪些事情","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/http/14.理想模型.md","filePath":"前端/面试题/http/14.理想模型.md","lastUpdated":1727172427000}'),r={name:"前端/面试题/http/14.理想模型.md"};function o(u,l,h,n,s,c){return t(),a("div",null,l[0]||(l[0]=[e('<h1 id="七层和四层的区别-真正做了哪些事情" tabindex="-1">七层和四层的区别，真正做了哪些事情 <a class="header-anchor" href="#七层和四层的区别-真正做了哪些事情" aria-label="Permalink to &quot;七层和四层的区别，真正做了哪些事情&quot;">​</a></h1><h2 id="osi" tabindex="-1">OSI <a class="header-anchor" href="#osi" aria-label="Permalink to &quot;OSI&quot;">​</a></h2><blockquote><p>OSI Open System Interconnection 七层，是理想化概念模型, 为网络划分的层次，专人做专事</p></blockquote><h2 id="七层" tabindex="-1">七层 <a class="header-anchor" href="#七层" aria-label="Permalink to &quot;七层&quot;">​</a></h2><ul><li>应用层：微信 qq</li><li>表示层：数据描述压缩，整理表达</li><li>会话层：创建管理会话</li><li>传输层：组装数据 丢了要不要重传</li><li>网络层：ip 地址</li><li>数据链路层：mac 地址 两个设备的连接</li><li>物理层： 只关心传输数据 0 1 比特流</li></ul><h2 id="四层" tabindex="-1">四层 <a class="header-anchor" href="#四层" aria-label="Permalink to &quot;四层&quot;">​</a></h2><ul><li>应用层</li><li>传输层</li><li>网络层</li><li>网络接口层</li></ul><h2 id="七层协议真正做的事情" tabindex="-1">七层协议真正做的事情 <a class="header-anchor" href="#七层协议真正做的事情" aria-label="Permalink to &quot;七层协议真正做的事情&quot;">​</a></h2><ul><li>应用层：报文</li><li>传输层：数据段 + 端口号</li><li>网络层：数据包 + 端口号 + ip</li><li>数据链路：数据帧 + 端口号 + mac 地址</li></ul><h2 id="ipv4-最大值的-ipv6-组成" tabindex="-1">IPV4 最大值的，IPV6 组成 <a class="header-anchor" href="#ipv4-最大值的-ipv6-组成" aria-label="Permalink to &quot;IPV4 最大值的，IPV6 组成&quot;">​</a></h2><ul><li><p>IPV4</p><ul><li>ip 的第四个版本 IPV4 长度是 32 位(4 字节 ) 2^32-1 = 4294967295</li><li>十进制最大：255.255.255.255</li><li>二进制：11111111.11111111.11111111.11111111</li></ul></li><li><p>IPV6</p><ul><li>十进制 0000-0000-0000-0000 0000-0000-0000-0000</li><li>二进制：128 位 bits(16 bytes 字节 ) 11111111.11111111.11111111.11111111 11111111.11111111.11111111.11111111 11111111.11111111.11111111.11111111 11111111.11111111.11111111.11111111</li></ul></li><li><p>为什么仍在使用 IPV4</p><ul><li>ipv4 和 ipv6 不能够通信, ipv6 集成和适配很复杂</li></ul></li></ul><h2 id="mac-地址怎么产生-怎么查找到" tabindex="-1">Mac 地址怎么产生，怎么查找到 <a class="header-anchor" href="#mac-地址怎么产生-怎么查找到" aria-label="Permalink to &quot;Mac 地址怎么产生，怎么查找到&quot;">​</a></h2><ul><li>原则唯一，每个网卡都会有一个，通过 ip 查找 ARP 协议</li></ul><h2 id="设备有哪些" tabindex="-1">设备有哪些 <a class="header-anchor" href="#设备有哪些" aria-label="Permalink to &quot;设备有哪些&quot;">​</a></h2><ul><li>物理层：光纤、网线、中继器、集线器 <ul><li>中继器 <ul><li>背景：随着网线越来越长，接受方信息有损耗</li><li>功能：重新发送或者转发，有放大再生信号，传输更远，扩大通信距离。</li><li>作用：两个完全相同的网络互连</li></ul></li><li>集线器 <ul><li>功能：再生整形放大，把所有节点集中在以它为中心的节点上</li><li>方式：广播，不安全因素，可截取它人数据包</li></ul></li></ul></li><li>链路层：交换机 局域网通信 <ul><li>交换机：内部交换矩阵，把数据包直接而迅速地传送到目的节点而非所有节点</li></ul></li><li>网络层： <ul><li>路由器，wan 口当网关上网，没有 wan 口可当作交换机</li></ul></li></ul><h2 id="协议有哪些" tabindex="-1">协议有哪些 <a class="header-anchor" href="#协议有哪些" aria-label="Permalink to &quot;协议有哪些&quot;">​</a></h2><ul><li>应用层 HTTP DNS DHCP <ul><li>DHCP 动态主机配置协议，自动分配 ip, 基于 UDP</li></ul></li><li>传输层 TCP UDP</li><li>网络层 IP ARP</li></ul>',17)]))}const P=i(r,[["render",o]]);export{p as __pageData,P as default};
