import{_ as e,a as t,o as a,aR as o}from"./chunks/framework.Dl98zJwX.js";const m=JSON.parse('{"title":"Vite","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/webpack/vite.v.md","filePath":"前端/面试题/webpack/vite.v.md","lastUpdated":1720603948000}'),d={name:"前端/面试题/webpack/vite.v.md"},r=o('<h1 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;Vite&quot;">​</a></h1><p>Vite 是 前端开发构建工具(非构建式原生 ESM 开发服务器)，它不需要打包编译，所以非常快；利用现代浏览器对 ESModule 的支持，通过 koa 启动一个本地服务，分析 html 中入口 js，将文件中全局包添加 @module, 通过拦截 module 从而读取真正的 node_modules 下的文件，把 .vue 结尾的文件编译成一个对象，实现功能。</p><h2 id="支持-esmodule" tabindex="-1">支持 ESModule <a class="header-anchor" href="#支持-esmodule" aria-label="Permalink to &quot;支持 ESModule&quot;">​</a></h2><p><code>&lt;script type=&quot;module&quot; src=&quot;/src/main.js&quot;&gt;&lt;/script&gt;</code></p><h2 id="路径查找" tabindex="-1">./ ../ 路径查找 <a class="header-anchor" href="#路径查找" aria-label="Permalink to &quot;./ ../ 路径查找&quot;">​</a></h2><p><code>@modules/ 向 node_modules 下去</code></p><h2 id="处理-vue-文件" tabindex="-1">处理 .vue 文件 <a class="header-anchor" href="#处理-vue-文件" aria-label="Permalink to &quot;处理 .vue 文件&quot;">​</a></h2><p>vite 本地服务，判断当前请求文件是 .vue 文件， 被文件内容解析成 render 函数返回给浏览器渲染页面;</p>',8),i=[r];function s(l,c,n,u,_,h){return a(),t("div",null,i)}const v=e(d,[["render",s]]);export{m as __pageData,v as default};
