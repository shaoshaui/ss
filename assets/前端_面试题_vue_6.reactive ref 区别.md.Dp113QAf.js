import{_ as a,a as t,b as e,d as i,o as l}from"./chunks/framework.CqV2UAXh.js";const p=JSON.parse('{"title":"reactive ref 区别","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/vue/6.reactive ref 区别.md","filePath":"前端/面试题/vue/6.reactive ref 区别.md","lastUpdated":1727172427000}'),c={name:"前端/面试题/vue/6.reactive ref 区别.md"};function n(f,r,s,o,v,d){return l(),t("div",null,r[0]||(r[0]=[e("h1",{id:"reactive-ref-区别",tabindex:"-1"},[i("reactive ref 区别 "),e("a",{class:"header-anchor",href:"#reactive-ref-区别","aria-label":'Permalink to "reactive ref 区别"'},"​")],-1),e("p",null,"都可以为数据添加响应式",-1),e("ul",null,[e("li",null,"ref 基础数据类型"),e("li",null,"reactive 对象引用数据类型，使其变成响应式的引用类型的值")],-1),e("p",null,"reactive 和 ref 都是用来定义响应式数据的 reactive 更推荐去定义复杂的数据类型 ref 更推荐定义基本类型",-1),e("p",null,"ref 和 reactive 本质我们可以简单的理解为 ref 是对 reactive 的二次包装, ref 定义的数据访问的时候要多一个.value",-1)]))}const _=a(c,[["render",n]]);export{p as __pageData,_ as default};
