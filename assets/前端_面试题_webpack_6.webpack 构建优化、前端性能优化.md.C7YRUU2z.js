import{_ as e,a,o as l,aR as i}from"./chunks/framework.Dl98zJwX.js";const b=JSON.parse('{"title":"webpack 构建优化、前端性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/webpack/6.webpack 构建优化、前端性能优化.md","filePath":"前端/面试题/webpack/6.webpack 构建优化、前端性能优化.md","lastUpdated":1720611052000}'),t={name:"前端/面试题/webpack/6.webpack 构建优化、前端性能优化.md"},r=i('<h1 id="webpack-构建优化、前端性能优化" tabindex="-1">webpack 构建优化、前端性能优化 <a class="header-anchor" href="#webpack-构建优化、前端性能优化" aria-label="Permalink to &quot;webpack 构建优化、前端性能优化&quot;">​</a></h1><h2 id="构建优化" tabindex="-1">构建优化 <a class="header-anchor" href="#构建优化" aria-label="Permalink to &quot;构建优化&quot;">​</a></h2><ul><li>alias 别名，加快查找速度</li><li>dll</li><li>extensions 会依次尝试添加扩展名进行匹配，高频扩展名放到前面</li><li>hard-source-webpack-plugin 开启缓存, 使用 cache-loader babel-loader</li><li>IgnorePlugin: 不把制定模块打包进去</li><li>lintOnSave build 关闭</li><li>noParse：无依赖不需要解析，提高整体构建速度</li><li>parallel: terser-webpack-plugin 压缩</li><li>生产环境：关闭 sourcemap</li><li>thead-loader 开启多进程</li></ul><h2 id="前端性能" tabindex="-1">前端性能 <a class="header-anchor" href="#前端性能" aria-label="Permalink to &quot;前端性能&quot;">​</a></h2><ul><li>DllReferencePlugin(add-asset-html-webpack-plugin): dll 文件，公共文件抽取，防止每次业务代码更新 hash, 更好利用缓存</li><li>compression-webpack-plugin: gzip 压缩文件</li><li>代码分割：optimization.splitChunks, 将大依赖包 单独打包，防止业务代码更新 hash</li><li>CDN: publicPath，配置 externals</li><li>动态导入、懒加载：异步加载路由</li><li>preload 是告诉浏览器页面必定需要的资源，浏览器一定会加载这些资源</li><li>而 prefetch 是告诉浏览器页面可能需要的资源，浏览器不一定会加载这些资源</li><li>tree shaking 无用代码不打包</li><li>js 压缩、TerserPlugin</li><li>css 压缩 OptimizeCSSAssetsPlugin</li><li>压缩图片：image-webpack-loader</li><li>webpack.optimize.ModuleConcatenationPlugin,所有的模块按照引用顺序放在一个函数作用域里，然后适当地重命名一些变量以防止命名冲突</li></ul><h2 id="分析工具" tabindex="-1">分析工具 <a class="header-anchor" href="#分析工具" aria-label="Permalink to &quot;分析工具&quot;">​</a></h2><p>webpack-bundle-analyzer speed-measure-webpack-plugin 分析各种 babel 费时分析</p><ul><li><a href="https://www.yuque.com/mty/here/yv23oo" target="_blank" rel="noreferrer">基于 webpack 在 VueCLI 进行打包和构建的优化</a></li></ul>',8),o=[r];function n(c,s,p,d,_,h){return l(),a("div",null,o)}const k=e(t,[["render",n]]);export{b as __pageData,k as default};
