import{_ as s,a as l,o as a,aR as t}from"./chunks/framework.Dl98zJwX.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/css/基础.md","filePath":"前端/面试题/css/基础.md","lastUpdated":1721110570000}'),e={name:"前端/面试题/css/基础.md"},i=t('<h3 id="less-sass-stylus-三者的区别" tabindex="-1">less,sass,stylus 三者的区别 <a class="header-anchor" href="#less-sass-stylus-三者的区别" aria-label="Permalink to &quot;less,sass,stylus 三者的区别&quot;">​</a></h3><ul><li><p>变量：</p><ul><li>Sass 声明变量必须是『$』开头，后面紧跟变量名和变量值，而且变量名和变量值需要使用冒号：分隔开。</li><li>Less 声明变量用『@』开头，其余等同 Sass。</li><li>Stylus 中声明变量没有任何限定，结尾的分号可有可无，但变量名和变量值之间必须要有『等号』。</li></ul></li><li><p>作用域</p><ul><li>Sass：三者最差，不存在全局变量的概念。也就是说在 Sass 中定义了相同名字的变量时你就要小心蛋疼了。</li><li>Less：最近的一次更新的变量有效，并且会作用于全部的引用！</li><li>Stylus：Sass 的处理方式和 Stylus 相同，变量值输出时根据之前最近的一次定义计算，每次引用最近的定义有效；</li></ul></li><li><p>总结</p><ul><li>1.Sass 和 Less 语法严谨、Stylus 相对自由。因为 Less 长得更像 css，所以它可能学习起来更容易。</li><li>2.Sass 和 Compass、Stylus 和 Nib 都是好基友。</li><li>3.Sass 和 Stylus 都具有类语言的逻辑方式处理：条件、循环等，而 Less 需要通过 When 等关键词模拟这些功能，这方面 Less 比不上 Sass 和 Stylus。</li><li>4.Less 在丰富性以及特色上都不及 Sass 和 Stylus，若不是因为 Bootstrap 引入了 Less，可能它不会像现在这样被广泛应用（个人愚见）。</li></ul></li></ul>',2),o=[i];function _(u,r,c,S,n,p){return a(),l("div",null,o)}const y=s(e,[["render",_]]);export{h as __pageData,y as default};
