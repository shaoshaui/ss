import{_ as t,a as r,o as a,b as e,d as c}from"./chunks/framework.Dl98zJwX.js";const b=JSON.parse('{"title":"reactive ref 区别","description":"","frontmatter":{},"headers":[],"relativePath":"前端/面试题/vue/6.reactive ref 区别.md","filePath":"前端/面试题/vue/6.reactive ref 区别.md","lastUpdated":1720611052000}'),i={name:"前端/面试题/vue/6.reactive ref 区别.md"},s=e("h1",{id:"reactive-ref-区别",tabindex:"-1"},[c("reactive ref 区别 "),e("a",{class:"header-anchor",href:"#reactive-ref-区别","aria-label":'Permalink to "reactive ref 区别"'},"​")],-1),o=e("p",null,"都可以为数据添加响应式",-1),n=e("ul",null,[e("li",null,"ref 基础数据类型"),e("li",null,"reactive 对象引用数据类型，使其变成响应式的引用类型的值")],-1),l=e("p",null,"reactive 和 ref 都是用来定义响应式数据的 reactive 更推荐去定义复杂的数据类型 ref 更推荐定义基本类型",-1),_=e("p",null,"ref 和 reactive 本质我们可以简单的理解为 ref 是对 reactive 的二次包装, ref 定义的数据访问的时候要多一个.value",-1),d=[s,o,n,l,_];function f(v,u,p,h,m,x){return a(),r("div",null,d)}const k=t(i,[["render",f]]);export{b as __pageData,k as default};
